env:
matrix:
  include:
  - name: "Formatting checks expected to fail"
    env: ALLOW_FAILURES=true
    language: minimal
    script:
      # Check for UTF-8 BOM file encoding
      - find . -path './.git' -prune -or -type f -exec grep --files-with-matches --binary-files=without-match $'\xEF\xBB\xBF' '{}' \; -exec echo 'UTF-8 BOM encoding detected.' \; -exec false '{}' +
      # Check for files starting with a blank line
      - find . -path './.git' -prune -or -type f -print0 | xargs --null --max-lines=1 bash -c 'head -1 "$0" | grep --binary-files=without-match --regexp="^$"; if [[ "$?" == "0" ]]; then echo "Blank line found at start of $0."; false; fi'
      # Check for tabs
      - find . -path './.git' -prune -or -type f -exec grep --with-filename --line-number --binary-files=without-match --regexp=$'\t' '{}' \; -exec echo 'Tab found.' \; -exec false '{}' +
      # Check for non-Unix line endings
      - find . -path './.git' -prune -or -type f -exec grep --files-with-matches --binary-files=without-match --regexp=$'\r$' '{}' \; -exec echo 'Non-Unix EOL detected.' \; -exec false '{}' +
      # Check for trailing whitespace
      - find . -path './.git' -prune -or -type f -exec grep --with-filename --line-number --binary-files=without-match --regexp='[[:blank:]]$' '{}' \; -exec echo 'Trailing whitespace found.' \; -exec false '{}' +
      # Check for extra blank lines at end of files
      - find . -path './.git' -prune -or -type f -print0 | xargs --null --max-lines=1 bash -c 'tail -1 "$0" | grep --binary-files=without-match --regexp="^$"; if [[ "$?" == "0" ]]; then echo "Blank line found at end of $0."; false; fi'
      # Check for files that don't end in a newline (https://stackoverflow.com/a/25686825)
      - find . -path './.git' -prune -or -type f -print0 | xargs --null --max-lines=1 bash -c 'if test "$(grep --files-with-matches --binary-files=without-match --max-count=1 --regexp='.*' "$0")" && test "$(tail --bytes=1 "$0")"; then echo "No new line at end of $0."; false; fi'


  - name: "Formatting checks expected to pass"
    language: minimal
    script:
      # Check for UTF-8 BOM file encoding
      - find . -path './.git' -prune -or \( -not -name 'has_bom.txt' -and -type f \) -exec grep --files-with-matches --binary-files=without-match $'\xEF\xBB\xBF' '{}' \; -exec echo 'UTF-8 BOM encoding detected.' \; -exec false '{}' +
      # Check for files starting with a blank line
      # Exclude file name
      - find . -path './.git' -prune -or \( -not -name 'blank_line_at_start_of_file.txt' -and -type f \) -print0 | xargs --null --max-lines=1 bash -c 'head -1 "$0" | grep --binary-files=without-match --regexp="^$"; if [[ "$?" == "0" ]]; then echo "Blank line found at start of $0."; false; fi'
      # Check for tabs
      # Exclude filename with wildcard
      - find . -path './.git' -prune -or \( -not -name '*tab*.txt' -and -type f \) -exec grep --with-filename --line-number --binary-files=without-match --regexp=$'\t' '{}' \; -exec echo 'Tab found.' \; -exec false '{}' +
      # Check for non-Unix line endings
      - find . -path './.git' -prune -or -path './test-files' -prune -or \( -type f \) -exec grep --files-with-matches --binary-files=without-match --regexp=$'\r$' '{}' \; -exec echo 'Non-Unix EOL detected.' \; -exec false '{}' +
      # Check for trailing whitespace
      # Exclude folder
      - find . -path './.git' -prune -or -path './test-files' -prune -or \( -type f \) -exec grep --with-filename --line-number --binary-files=without-match --regexp='[[:blank:]]$' '{}' \; -exec echo 'Trailing whitespace found.' \; -exec false '{}' +
      # Check for extra blank lines at end of files
      # Exclude filename with path
      - find . -path './.git' -prune -or \( -not -path './test-files/blank_line_at_end_of_file.txt' -and -type f \) -print0 | xargs --null --max-lines=1 bash -c 'tail -1 "$0" | grep --binary-files=without-match --regexp="^$"; if [[ "$?" == "0" ]]; then echo "Blank line found at end of $0."; false; fi'
      # Check for files that don't end in a newline (https://stackoverflow.com/a/25686825)
      - find . -path './.git' -prune -or -path './test-files' -prune -or \( -type f \) -print0 | xargs --null --max-lines=1 bash -c 'if test "$(grep --files-with-matches --binary-files=without-match --max-count=1 --regexp='.*' "$0")" && test "$(tail --bytes=1 "$0")"; then echo "No new line at end of $0."; false; fi'


  - name: "Spell check"
    language: python
    python: 3.6
    install:
      # https://github.com/codespell-project/codespell
      - pip install codespell
    script:
      - codespell --skip="${TRAVIS_BUILD_DIR}/.git" "${TRAVIS_BUILD_DIR}"


  allow_failures:
    # define the key used to determine whether job failures are allowed
    - env: ALLOW_FAILURES=true


notifications:
  email:
    on_success: always
    on_failure: always
  webhooks:
    urls:
      - https://www.travisbuddy.com/
    on_success: never
    on_failure: always
