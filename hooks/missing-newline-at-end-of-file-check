#!/bin/bash

# Check for files that don't end in a newline

# Comma separated list of folders to exclude from the formatting check
readonly excludedPathList="'./.git'"

# Stash so that unstaged changes are not checked
git stash -q --keep-index

# Assemble the find options for the excluded paths from the list
for excludedPath in ${excludedPathList//,/ }; do
  excludeOptions="$excludeOptions -path $excludedPath -prune -or"
done

# Set default exit status
exitStatus=0

while read -r filename; do
  # Check if it's a file (find matches on pruned folders)
  if [[ -f "$filename" ]]; then
    # Check if the file is tracked by git
    if ! git ls-files --error-unmatch "$filename" &>/dev/null; then
      # Don't check untracked files
      continue
    fi

    if test "$(grep --files-with-matches --binary-files=without-match --max-count=1 --regexp='.*' "$filename")" && test "$(tail --bytes=1 "$filename")"; then
      echo "ERROR: No new line at end of $filename"
      # Make the hook fail
      exitStatus=1
    fi
  fi
done <<<"$(eval "find . $excludeOptions -type f")"

git stash pop -q

exit $exitStatus
